[{"/Users/weiyaoli/Desktop/golf-storm/client/src/index.js":"1","/Users/weiyaoli/Desktop/golf-storm/client/src/App.js":"2","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Header.js":"3","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Footer.js":"4","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/HomeScreen.js":"5","/Users/weiyaoli/Desktop/golf-storm/client/src/products.js":"6","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Product.js":"7","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Rating.js":"8","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ProductScreen.js":"9","/Users/weiyaoli/Desktop/golf-storm/client/src/store.js":"10","/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/productReducers.js":"11","/Users/weiyaoli/Desktop/golf-storm/client/src/constants/productConstants.js":"12","/Users/weiyaoli/Desktop/golf-storm/client/src/actions/productActions.js":"13","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Loader.js":"14","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Message.js":"15","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/CartScreen.js":"16","/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/cartReducers.js":"17","/Users/weiyaoli/Desktop/golf-storm/client/src/constants/cartConstants.js":"18","/Users/weiyaoli/Desktop/golf-storm/client/src/actions/cartActions.js":"19","/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/userReducers.js":"20","/Users/weiyaoli/Desktop/golf-storm/client/src/constants/userConstants.js":"21","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/LoginScreen.js":"22","/Users/weiyaoli/Desktop/golf-storm/client/src/actions/userActions.js":"23","/Users/weiyaoli/Desktop/golf-storm/client/src/components/FormContainer.js":"24","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/RegisterScreen.js":"25","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ProfileScreen.js":"26","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ShippingScreen.js":"27","/Users/weiyaoli/Desktop/golf-storm/client/src/components/CheckoutSteps.js":"28","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/PaymentScreen.js":"29","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/PlaceOrderScreen.js":"30","/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/orderReducers.js":"31","/Users/weiyaoli/Desktop/golf-storm/client/src/constants/orderConstants.js":"32","/Users/weiyaoli/Desktop/golf-storm/client/src/actions/orderActions.js":"33","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/OrderScreen.js":"34"},{"size":334,"mtime":1672604120029,"results":"35","hashOfConfig":"36"},{"size":1682,"mtime":1672896597461,"results":"37","hashOfConfig":"36"},{"size":2220,"mtime":1672780069741,"results":"38","hashOfConfig":"36"},{"size":362,"mtime":1672261967083,"results":"39","hashOfConfig":"36"},{"size":1155,"mtime":1672631678949,"results":"40","hashOfConfig":"36"},{"size":2907,"mtime":1672352038864,"results":"41","hashOfConfig":"36"},{"size":1095,"mtime":1672350363447,"results":"42","hashOfConfig":"36"},{"size":1487,"mtime":1672349566984,"results":"43","hashOfConfig":"36"},{"size":6043,"mtime":1672697023333,"results":"44","hashOfConfig":"36"},{"size":1702,"mtime":1672955180337,"results":"45","hashOfConfig":"36"},{"size":1054,"mtime":1672633415542,"results":"46","hashOfConfig":"36"},{"size":374,"mtime":1672697214407,"results":"47","hashOfConfig":"36"},{"size":1232,"mtime":1672762822581,"results":"48","hashOfConfig":"36"},{"size":465,"mtime":1672629257411,"results":"49","hashOfConfig":"36"},{"size":232,"mtime":1672629418872,"results":"50","hashOfConfig":"36"},{"size":4280,"mtime":1672716707356,"results":"51","hashOfConfig":"36"},{"size":1455,"mtime":1672861479613,"results":"52","hashOfConfig":"36"},{"size":286,"mtime":1672861324155,"results":"53","hashOfConfig":"36"},{"size":1307,"mtime":1672802114026,"results":"54","hashOfConfig":"36"},{"size":2258,"mtime":1672799405227,"results":"55","hashOfConfig":"36"},{"size":890,"mtime":1672799360139,"results":"56","hashOfConfig":"36"},{"size":2525,"mtime":1672782542689,"results":"57","hashOfConfig":"36"},{"size":4105,"mtime":1672799466366,"results":"58","hashOfConfig":"36"},{"size":384,"mtime":1672764161526,"results":"59","hashOfConfig":"36"},{"size":3899,"mtime":1672783068991,"results":"60","hashOfConfig":"36"},{"size":4462,"mtime":1672799277252,"results":"61","hashOfConfig":"36"},{"size":3180,"mtime":1672801685478,"results":"62","hashOfConfig":"36"},{"size":1634,"mtime":1672801258360,"results":"63","hashOfConfig":"36"},{"size":1676,"mtime":1672802584760,"results":"64","hashOfConfig":"36"},{"size":7391,"mtime":1672861257614,"results":"65","hashOfConfig":"36"},{"size":2060,"mtime":1672955151896,"results":"66","hashOfConfig":"36"},{"size":606,"mtime":1672955006166,"results":"67","hashOfConfig":"36"},{"size":3036,"mtime":1672955429440,"results":"68","hashOfConfig":"36"},{"size":8867,"mtime":1672957085351,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},"xi7nry",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"73"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"73"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/weiyaoli/Desktop/golf-storm/client/src/index.js",["149"],"import {StrictMode} from 'react';\nimport {render} from 'react-dom';\nimport './bootstrap.min.css';\nimport store from './store';\nimport {Provider} from \"react-redux\";\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n\n    rootElement\n);\n",["150","151"],"/Users/weiyaoli/Desktop/golf-storm/client/src/App.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/components/Header.js",["152"],"import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Nav, Navbar, Container, Row, NavDropdown} from \"react-bootstrap\";\nimport {LinkContainer} from 'react-router-bootstrap';\nimport {logout} from '../actions/userActions'\n\nconst Header = () => {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const dispatch = useDispatch()\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/'>\n                        <Navbar.Brand>Golf Storm</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                            <LinkContainer to='/cart'>\n                                <Nav.Link><i className=\"fas fa-shopping-cart\"></i>Cart</Nav.Link>\n                            </LinkContainer>\n\n                            {userInfo ? (\n                                <NavDropdown id='username' title={userInfo.name}>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to='/login'>\n                                    <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\n                                </LinkContainer>\n\n                            )}\n\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/components/Footer.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/HomeScreen.js",["153"],"import React, {useState, useEffect} from 'react';\nimport {Row, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Product from \"../components/Product\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {listProducts} from '../actions/productActions';\n\nfunction HomeScreen() {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const {error, loading, products} = productList;\n\n    useEffect(() => {\n        dispatch(listProducts())\n    }, [dispatch]);\n\n    return (\n        <div>\n            <h1>Latest Products</h1>\n            {loading ? <Loader/>\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <Row>\n                        {products.map(product => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product}/>\n                            </Col>\n                        ))}\n                    </Row>\n            }\n\n\n        </div>\n    );\n};\n\nexport default HomeScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/products.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/components/Product.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/components/Rating.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ProductScreen.js",["154"],"import React, {useState, useEffect} from 'react';\nimport products from \"../products\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Link} from \"react-router-dom\";\nimport {Col, Row, Image, ListGroup, Button, Card, Form} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport {listProductDetails} from \"../actions/productActions\";\n\nfunction ProductScreen({match, history}) {\n    const [qty, setQty] = useState(1)\n\n    const dispatch = useDispatch()\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetails;\n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match]);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader/>\n                : error\n                    ? <Message variant=\"danger\">{error}</Message>\n                    : (\n                        <Row>\n                            <Col md={6}>\n                                <Image src={product.image} alt={product.name} fluid/>\n                            </Col>\n\n                            <Col md={3}>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        <h3>{product.name}</h3>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`}\n                                                color={'#f8e825'}/>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Price: ${product.price}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Description: {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n                            <Col md={3}>\n                                <Card>\n                                    <ListGroup variant='flush'>\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>\n                                                    Price:\n                                                </Col>\n                                                <Col>\n                                                    <strong>${product.price}</strong>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>\n                                                    Status:\n                                                </Col>\n                                                <Col>\n                                                    {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n\n                                        {product.countInStock > 0 && (\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>\n                                                        Qty\n                                                    </Col>\n                                                    <Col xs='auto' className='my-1'>\n                                                        <Form.Control as=\"select\"\n                                                                      value={qty}\n                                                                      onChange={(e) => setQty(e.target.value)}>\n                                                            {\n                                                                [...Array(product.countInStock).keys()].map((x) => (\n                                                                    <option key={x + 1} value={x + 1}>\n                                                                        {x + 1}\n                                                                    </option>\n                                                                ))\n                                                            }\n                                                        </Form.Control>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )}\n\n\n                                        <ListGroup.Item>\n                                            <Button\n                                                onClick={addToCartHandler}\n                                                className='btn-block' disabled={product.countInStock === 0}\n                                                type='button'>\n                                                Add to Cart\n                                            </Button>\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Card>\n                            </Col>\n\n\n                        </Row>\n                    )\n\n\n            }\n\n        </div>\n    );\n};\n\nexport default ProductScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/store.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/productReducers.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/constants/productConstants.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/actions/productActions.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/components/Loader.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/components/Message.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/CartScreen.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/cartReducers.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/constants/cartConstants.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/actions/cartActions.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/userReducers.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/constants/userConstants.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/LoginScreen.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/actions/userActions.js",["155"],"import {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants';\nimport axios from \"axios\";\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            `/api/users/login/`,\n            {'username': email, 'password': password},\n            config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message,\n        })\n    }\n}\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({type: USER_LOGOUT})\n    dispatch({type: USER_DETAILS_RESET})\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const {data} = await axios.post(\n            `/api/users/register/`,\n            {'name': name, 'email': email, 'password': password},\n            config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get(\n            `/api/users/${id}/`,\n            config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: {userInfo}\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message,\n        })\n    }\n}","/Users/weiyaoli/Desktop/golf-storm/client/src/components/FormContainer.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/RegisterScreen.js",["156"],"import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Button, Row, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from \"../components/Message\";\nimport {login, register} from '../actions/userActions';\nimport FormContainer from '../components/FormContainer';\nimport Loader from \"../components/Loader\";\n\nfunction RegisterScreen({location, history}) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const {error, loading, userInfo} = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader/>}\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter Name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n\n                    </Form.Control>\n\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n\n                    </Form.Control>\n\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n\n                    </Form.Control>\n\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link to={redirect ? `/register?redirect=${redirect}` : '/login'}>\n                    Sign In\n                </Link>\n                </Col>\n\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ProfileScreen.js",["157"],"import React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport {Form, Button, Row, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport {getUserDetails, updateUserProfile} from '../actions/userActions';\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\n\n\nfunction ProfileScreen({history}) {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success) {\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader/>}\n\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter Name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n\n                        </Form.Control>\n\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n\n                        </Form.Control>\n\n                    </Form.Group>\n\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n\n                        </Form.Control>\n\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n            <Col md={9}>\n                <h2>My Orders</h2>\n            </Col>\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/ShippingScreen.js",["158"],"import React, {useState, useEffect} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport {saveShippingAddress} from \"../actions/cartActions\";\n\n\nconst ShippingScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2/>\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter Address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter City'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter Postal Code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter Country'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default ShippingScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/components/CheckoutSteps.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/PaymentScreen.js",["159"],"import React, {useState, useEffect} from 'react';\nimport {Form, Button, Col} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport {savePaymentMethod} from \"../actions/cartActions\";\n\nconst PaymentScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart)\n    const {shippingAddress} = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3/>\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='Paypal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        ></Form.Check>\n                    </Col>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default PaymentScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/screens/PlaceOrderScreen.js",["160","161"],"import React, {useState, useEffect} from 'react';\nimport {Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap';\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux';\nimport Message from '../components/Message';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport {createOrder} from '../actions/orderActions';\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants';\n\nfunction PlaceOrderScreen({history}) {\n    const orderCreate = useSelector(state => state.orderCreate)\n    const {order, error, success} = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.089) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({type: ORDER_CREATE_RESET})\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n\n        }))\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4/>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>\n                                Shipping\n                            </h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},\n                                {' '}\n                                {cart.shippingAddress.city},\n                                {' '}\n                                {cart.shippingAddress.postalCode},\n                                {' '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>\n                                Payment Method\n                            </h2>\n\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>\n                                Order Items\n                            </h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))\n                                    }\n                                </ListGroup>\n                            )\n                            }\n\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Items:\n                                    </Col>\n                                    <Col>\n                                        ${cart.itemsPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Shipping:\n                                    </Col>\n                                    <Col>\n                                        ${cart.shippingPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Tax:\n                                    </Col>\n                                    <Col>\n                                        ${cart.taxPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Total:\n                                    </Col>\n                                    <Col>\n                                        ${cart.totalPrice}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}>\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default PlaceOrderScreen;\n","/Users/weiyaoli/Desktop/golf-storm/client/src/reducers/orderReducers.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/constants/orderConstants.js",[],"/Users/weiyaoli/Desktop/golf-storm/client/src/actions/orderActions.js",["162"],"/Users/weiyaoli/Desktop/golf-storm/client/src/screens/OrderScreen.js",["163"],{"ruleId":"164","severity":1,"message":"165","line":1,"column":9,"nodeType":"166","messageId":"167","endLine":1,"endColumn":19},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"164","severity":1,"message":"172","line":3,"column":33,"nodeType":"166","messageId":"167","endLine":3,"endColumn":36},{"ruleId":"164","severity":1,"message":"173","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"164","severity":1,"message":"174","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"175","line":5,"column":89,"nodeType":"166","messageId":"167","endLine":5,"endColumn":114},{"ruleId":"164","severity":1,"message":"176","line":6,"column":9,"nodeType":"166","messageId":"167","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"177","line":2,"column":9,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"178","line":1,"column":26,"nodeType":"166","messageId":"167","endLine":1,"endColumn":35},{"ruleId":"164","severity":1,"message":"178","line":1,"column":26,"nodeType":"166","messageId":"167","endLine":1,"endColumn":35},{"ruleId":"164","severity":1,"message":"173","line":1,"column":16,"nodeType":"166","messageId":"167","endLine":1,"endColumn":24},{"ruleId":"179","severity":1,"message":"180","line":33,"column":8,"nodeType":"181","endLine":33,"endColumn":26,"suggestions":"182"},{"ruleId":"164","severity":1,"message":"183","line":10,"column":5,"nodeType":"166","messageId":"167","endLine":10,"endColumn":20},{"ruleId":"164","severity":1,"message":"184","line":2,"column":9,"nodeType":"166","messageId":"167","endLine":2,"endColumn":15},"no-unused-vars","'StrictMode' is defined but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],"'Row' is defined but never used.","'useState' is defined but never used.","'products' is defined but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'login' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["187"],"'ORDER_PAY_RESET' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"190","text":"191"},[1255,1273],"[success, history, order._id, dispatch]"]